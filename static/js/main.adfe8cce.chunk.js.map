{"version":3,"sources":["Components/useDeviceOrientation.js","Components/useFavicon.js","Components/useGeolocation.js","Components/useOnline.js","Components/useMousePosition.js","Components/useLocalStorage.js","index.js"],"names":["useDeviceOrientation","useState","alpha","beta","gamma","state","setState","deviceOrientation","event","useEffect","window","addEventListener","removeEventListener","useFavicon","path","favicon","setFavicon","$favicon","document","querySelector","createElement","type","rel","href","useGeolocation","lat","long","coords","setCoords","error","setError","geoSuccess","position","latitude","longitude","geoError","geoOptions","enableHighAccuracy","maximumAge","timeout","navigator","geolocation","getCurrentPosition","useOnline","onChange","onLine","status","setStatus","handleChange","useMousePosition","posX","posY","setPosition","getMousePosition","mouseEvent","screenX","screenY","onmousemove","useLocalStorage","name","initialValue","currentLS","setCurrentLS","value","localStorage","setItem","setLS","rootElement","getElementById","ReactDOM","render","className","onClick"],"mappings":"sMAmBeA,MAjBf,WAAiC,IAAD,EACJC,mBAAS,CACjCC,MAAO,EACPC,KAAM,EACNC,MAAO,IAJqB,mBACvBC,EADuB,KAChBC,EADgB,KAMxBC,EAAoB,SAACC,GAAW,IAC5BN,EAAuBM,EAAvBN,MAAOC,EAAgBK,EAAhBL,KAAMC,EAAUI,EAAVJ,MACrBE,EAAS,CAAEJ,QAAOC,OAAMC,WAM1B,OAJAK,oBAAU,WAER,OADAC,OAAOC,iBAAiB,oBAAqBJ,GACtC,kBAAMG,OAAOE,oBAAoB,oBAAqBL,MAExDF,GCCMQ,MAff,SAAoBC,GAAO,IAAD,EACMb,mBAASa,GADf,mBACjBC,EADiB,KACRC,EADQ,KAYxB,OADAP,oBARsB,WACpB,IAAIQ,EAAWC,SAASC,cAAc,sBACtCF,EAAWA,GAAYC,SAASE,cAAc,SAErCC,KAAO,eAChBJ,EAASK,IAAM,gBACfL,EAASM,KAAOR,GAEOA,GAClBC,GCeMQ,MA3Bf,WAA2B,IAAD,EACIvB,mBAAS,CAAEwB,IAAK,EAAGC,KAAM,IAD7B,mBACjBC,EADiB,KACTC,EADS,OAEE3B,mBAAS,MAFX,mBAEjB4B,EAFiB,KAEVC,EAFU,KAIlBC,EAAa,SAACC,GAAc,IAAD,EAG3BA,EADFL,OAAUM,EAFmB,EAEnBA,SAAUC,EAFS,EAETA,UAEtBN,EAAU,CAAEH,IAAKQ,EAAUP,KAAMQ,KAE7BC,EAAW,WACfL,EAAS,sBAGLM,EAAa,CACjBC,oBAAoB,EACpBC,WAAY,IACZC,QAAS,MAQX,OAFA9B,oBAHe,WACb+B,UAAUC,YAAYC,mBAAmBX,EAAYI,EAAUC,IAE/C,IAEX,CAAET,SAAQE,UCFJc,MAvBf,SAAmBC,GAAW,IAAD,EACC3C,mBAASuC,UAAUK,QADpB,mBACpBC,EADoB,KACZC,EADY,KAGrBC,EAAe,WACK,oBAAbJ,GACTA,EAASJ,UAAUK,QAErBE,EAAUP,UAAUK,SAatB,OANApC,oBAAU,WAGR,OAFAC,OAAOC,iBAAiB,SAAUqC,GAClCtC,OAAOC,iBAAiB,UAAWqC,GALnCtC,OAAOE,oBAAoB,SAAUoC,QACrCtC,OAAOE,oBAAoB,UAAWoC,KAQjCF,GCJMG,MAhBf,WAA6B,IAAD,EACMhD,mBAAS,CACvCiD,KAAM,EACNC,KAAM,IAHkB,mBACnBnB,EADmB,KACToB,EADS,KAMpBC,EAAmB,SAACC,GAAgB,IAChCC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACjBJ,EAAY,CAAEF,KAAMK,EAASJ,KAAMK,KAMrC,OAJA/C,oBAAU,WACRS,SAASuC,YAAcJ,IAGlBrB,GCHM0B,MAXf,SAAyBC,EAAMC,GAAe,IAAD,EACT3D,mBAAS2D,GADA,mBACpCC,EADoC,KACzBC,EADyB,KAS3C,OAFArD,oBAJiB,SAACsD,GAChBC,aAAaC,QAAQN,EAAMI,KAKtB,CAAEF,YAAWK,MAAOJ,ICqD7B,IAAMK,EAAcjD,SAASkD,eAAe,QAC5CC,IAASC,OAAO,kBAxDhB,WAAgB,IAAD,EACkBtE,IAAvBE,EADK,EACLA,MAAOC,EADF,EACEA,KAAMC,EADR,EACQA,MACfY,EAAaH,IAFN,EAWTW,IAXS,IASXG,OAAUF,EATC,EASDA,IAAKC,EATJ,EASIA,KACfG,EAVW,EAUXA,MAGIgB,EAASF,IAbF,EAeUM,IAAfC,EAfK,EAeLA,KAAMC,EAfD,EAeCA,KAfD,EAgBgBO,EAAgB,OAAQ,QAA7CG,EAhBK,EAgBLA,UAAWK,EAhBN,EAgBMA,MAEnB,OACE,yBAAKK,UAAU,OACb,2CACA,oDACA,4BACE,sCAAYrE,GACZ,qCAAWC,GACX,sCAAYC,IAEd,0CACA,4BAAQoE,QAzBU,WACpBxD,EACE,uEAuBA,UAEA,8CACA,4BACE,0CAAgBS,GAChB,0CAAgBC,GAChB,kDAAwBG,IAE1B,2CACA,+CACA,4BACE,8CAAoBgC,GACpB,4BAAQW,QAAS,kBAAMN,EAAM,WAA7B,qBACA,4BAAQM,QAAS,kBAAMN,EAAM,QAA7B,aAEF,gDACA,4BACE,wCAAchB,GACd,wCAAcC,IAEhB,yCACA,8CAAoBN,EAAS,SAAW,WACxC,+CAMU,MAASsB,K","file":"static/js/main.adfe8cce.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction useDeviceOrientation() {\n  const [state, setState] = useState({\n    alpha: 0,\n    beta: 0,\n    gamma: 0\n  });\n  const deviceOrientation = (event) => {\n    const { alpha, beta, gamma } = event;\n    setState({ alpha, beta, gamma });\n  };\n  useEffect(() => {\n    window.addEventListener('deviceorientation', deviceOrientation);\n    return () => window.removeEventListener('deviceorientation', deviceOrientation);\n  });\n  return state;\n}\n\nexport default useDeviceOrientation;\n","import { useState, useEffect } from 'react';\n\nfunction useFavicon(path) {\n  const [favicon, setFavicon] = useState(path);\n\n  const updateFavicon = () => {\n    let $favicon = document.querySelector('link[rel*=\\'icon\\']');\n    $favicon = $favicon || document.createElement('link');\n\n    $favicon.type = 'image/x-icon';\n    $favicon.rel = 'shortcut icon';\n    $favicon.href = favicon;\n  };\n  useEffect(updateFavicon, favicon);\n  return setFavicon;\n}\n\nexport default useFavicon;\n","import { useState, useEffect } from 'react';\n\nfunction useGeolocation() {\n  const [coords, setCoords] = useState({ lat: 0, long: 0 });\n  const [error, setError] = useState(null);\n\n  const geoSuccess = (position) => {\n    const {\n      coords: { latitude, longitude }\n    } = position;\n    setCoords({ lat: latitude, long: longitude });\n  };\n  const geoError = () => {\n    setError('Geolocation Error');\n  };\n\n  const geoOptions = {\n    enableHighAccuracy: true,\n    maximumAge: 30000,\n    timeout: 27000\n  };\n\n  const getGeo = () => {\n    navigator.geolocation.getCurrentPosition(geoSuccess, geoError, geoOptions);\n  };\n  useEffect(getGeo, []);\n\n  return { coords, error };\n}\nexport default useGeolocation;\n","import { useState, useEffect } from 'react';\n\nfunction useOnline(onChange) {\n  const [status, setStatus] = useState(navigator.onLine);\n\n  const handleChange = () => {\n    if (typeof onChange === 'function') {\n      onChange(navigator.onLine);\n    }\n    setStatus(navigator.onLine);\n  };\n\n  const removeEvent = () => {\n    window.removeEventListener('online', handleChange);\n    window.removeEventListener('offline', handleChange);\n  };\n  useEffect(() => {\n    window.addEventListener('online', handleChange);\n    window.addEventListener('offline', handleChange);\n    return removeEvent();\n  });\n\n  return status;\n}\n\nexport default useOnline;\n","import { useState, useEffect } from 'react';\n\nfunction useMousePosition() {\n  const [position, setPosition] = useState({\n    posX: 0,\n    posY: 0\n  });\n\n  const getMousePosition = (mouseEvent) => {\n    const { screenX, screenY } = mouseEvent;\n    setPosition({ posX: screenX, posY: screenY });\n  };\n  useEffect(() => {\n    document.onmousemove = getMousePosition;\n  });\n\n  return position;\n}\nexport default useMousePosition;\n","import { useState, useEffect } from 'react';\n\nfunction useLocalStorage(name, initialValue) {\n  const [currentLS, setCurrentLS] = useState(initialValue);\n\n  const setValue = (value) => {\n    localStorage.setItem(name, value);\n  };\n\n  useEffect(setValue);\n\n  return { currentLS, setLS: setCurrentLS };\n}\nexport default useLocalStorage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport useDeviceOrientation from \"./Components/useDeviceOrientation\";\nimport useFavicon from \"./Components/useFavicon\";\nimport useGeolocation from \"./Components/useGeolocation\";\nimport useOnline from \"./Components/useOnline\";\nimport useMousePosition from \"./Components/useMousePosition\";\nimport useLocalStorage from \"./Components/useLocalStorage\";\n\nfunction App() {\n  const { alpha, beta, gamma } = useDeviceOrientation();\n  const setFavicon = useFavicon();\n  const changeFavicon = () => {\n    setFavicon(\n      \"https://ssl.pstatic.net/sstatic/search/favicon/favicon_140327.ico\"\n    );\n  };\n  const {\n    coords: { lat, long },\n    error\n  } = useGeolocation();\n\n  const onLine = useOnline();\n\n  const { posX, posY } = useMousePosition();\n  const { currentLS, setLS } = useLocalStorage(\"test\", \"test\");\n\n  return (\n    <div className=\"App\">\n      <h1>Superhooks!</h1>\n      <h2>useDeviceOrientation</h2>\n      <ul>\n        <li>Alpha: {alpha}</li>\n        <li>Beta: {beta}</li>\n        <li>Gamma: {gamma}</li>\n      </ul>\n      <h2>useFavicon</h2>\n      <button onClick={changeFavicon}>Change</button>\n\n      <h2>useGeolocation</h2>\n      <ul>\n        <li>Latitube : {lat}</li>\n        <li>Longitude: {long}</li>\n        <li>Geolocation Error: {error}</li>\n      </ul>\n      <h2>useKeyPress</h2>\n      <h2>useLocalStorage</h2>\n      <ul>\n        <li>Current Value: {currentLS}</li>\n        <button onClick={() => setLS(\"12345\")}>Set value : 12345</button>\n        <button onClick={() => setLS(null)}>Clear LS</button>\n      </ul>\n      <h2>useMousePosition</h2>\n      <ul>\n        <li>Mouse X: {posX}</li>\n        <li>Mouse Y: {posY}</li>\n      </ul>\n      <h2>useOnline</h2>\n      <p>Are we online ? {onLine ? \"Online\" : \"Offline\"}</p>\n      <h2>useLockScroll</h2>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}